[
["index.html", "Epsilon Learns to Algo Preface", " Epsilon Learns to Algo Epsilon Guanlin Li Aug. 26 2019 Preface This small book is a notebook or diary book recording my roadmap to learning algorithms and data structures. I would like to first start from something really interesting and gradually get into the basics and foundamental infrastructure of the whole algorithm palace. From the beginning of the writing, I am thinking that I am weak in algorithms and probabily due to education I used to receive while learning algorithms. So this note is expected to demonstrate experimentally how I educate myself to be not afraid of and love algorithms. So I hope this note can be encouraging and educational as well. "],
["classic-algorithm-books-a-review.html", "Classic Algorithm Books: A review", " Classic Algorithm Books: A review In this section, I would like to review several algorithm books. They are: Algorithms (Dasgupta, Papadimitriou, and Vazirani 2008) Algorithm Design (Kleinberg and Tardos 2005) Introduction to Algorithms (Cormen et al. 2009) Dasgupta, Papadimitriou, and Vazirani (2008) is a suitable-length book (about 300+ pages) for quickly getting to grasp the idea of algorithm design and many more philosophical understanding of a great many algorithms and techniques. While Cormen et al. (2009) is a gigantic book which includes all the algorithms of the first two books as well as carefully categorized data structures like binary trees, red-black trees and more advanced Fibonacci heaps. This book emphasizes on algorithm analysis for which it introduces several analysis techniques such as amortised analysis. Kleinberg and Tardos (2005) is a very elegant book which I think is similar to the writing philosophy of Dasgupta, Papadimitriou, and Vazirani (2008), since both of them task as example and develop realistic problems to guide the reader into thinking of delicate algorithms from simple ones. "],
["intro.html", "Chapter 1 Start from Something Interests Me", " Chapter 1 Start from Something Interests Me This chapter is going to hold several learning experience during which I get to familiar with something interesting. First principle: to start from something really interests you so that you would not give up at first when you have not taste the beauty of the field However, to guarantee that those interesting stuff is also classic or useful from a pragmatic point of view, I would like to first choose from topics of Donald Knuthâ€™s Chritmas Lectures. Second principle: find the classics to learn from the most well-known field polit of all the time. "],
["dancing-links.html", "1.1 Dancing Links", " 1.1 Dancing Links Dancing links is a data structure proposed as an efficient implementation of the X algorithm which finds all feasible solutions for an exact cover problem. In the following, I would like to give a brief introduction to the exact cover problem with several applications. Most of the current contents are adopted from the 2018 Christmas Lecture by Donald Knuth. Exact cover problem, restated in my mathematical wordings; The dancing links data structure and its implementation through c++. 1.1.1 Exact Cover Problem Exact cover problem can be mathematically thought of as a set cover problem. Formally, given a set \\(X\\) and a subset of its power set \\(S \\subset 2^X\\), find a subset of \\(S&#39; \\subset S\\), such that \\(\\forall S&#39;_i \\in S\\) "],
["literature.html", "Chapter 2 Literature", " Chapter 2 Literature Here is a review of existing methods. "],
["methods.html", "Chapter 3 Methods", " Chapter 3 Methods We describe our methods in this chapter. "],
["references.html", "References", " References "]
]
